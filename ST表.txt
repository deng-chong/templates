class ST {
    int f[100005][21];
    int Logn[100005];
    
public:
    ST(){}
    ST(vector<int>& nums) {
        int n = nums.size();
        f.resize(n), Logn.resize(n + 1);
        Logn[1] = 0, Logn[2] = 1;
        for (int i = 3; i <= n; ++i) Logn[i] = 1 + Logn[i >> 1];
        for (int i = 0; i < n; ++i) f[i][0] = nums[i];
        for (int i = n - 1; i >= 0; --i) {
            for (int j = 1; i + (1 << j) - 1 < n ; ++j) {
                f[i][j] = max(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);
            }
        }
    }
    int query(int L, int R) {
        int x = Logn[R - L + 1];
        return max(f[L][x], f[R - (1 << x) + 1][x]);
    }
};